#!/usr/bin/env deployer

import("eigen_typekit")
import("kdl_typekit")
import("rst-rt_typekit")
import("/home/biorob/coman_workspace/iit-rtt-coman/rtt_coman/build/orocos/gnulinux/rtt_coman")
import("motor_controller_test")
import("/home/biorob/coman_workspace/build/orocos/gnulinux/Walking-rtt")

loadComponent("coman","cogimon::rtt_coman")
setActivity("coman",0.001,10,ORO_SCHED_OTHER)

loadComponent("walking", "Walking");
setActivity("walking",0.001,10,ORO_SCHED_OTHER)

var string YAML_path = "/home/biorob/coman_workspace/iit-rtt-coman/rtt_coman/config/config.yaml"
coman.loadYAML(YAML_path)

var string urdf_path = "/home/biorob/citk/systems/cogimon-minimal-trusty-nightly/share/gazebo/models/cogimon/iit-coman-hardware/model.urdf"
var string srdf_path = "/home/biorob/citk/systems/cogimon-minimal-trusty-nightly/share/gazebo/models/cogimon/iit-coman-hardware/coman.srdf"
coman.loadURDFAndSRDF(urdf_path, srdf_path)

coman.configure()

walking.configure()
#addPeer("coman", "walking")
connectPeers("coman","walking")
walking.attachToRobot("coman")

walking.loadURDFAndSRDF(urdf_path, srdf_path)

var double M_PI = 3.14159265359;
coman.setOffSet("LShLat", 90.0*M_PI/180.0)
coman.setOffSet("RShLat", -90.0*M_PI/180.0)

var ConnPolicy cp_1;
connect("walking.left_arm_voltage", "coman.left_arm_JointPositionCtrl_VoltageOffset", cp_1)

var ConnPolicy cp_2;
connect("walking.right_arm_voltage", "coman.right_arm_JointPositionCtrl_VoltageOffset", cp_2)

var ConnPolicy cp_3;
connect("walking.left_leg_voltage", "coman.left_leg_JointPositionCtrl_VoltageOffset", cp_3)

var ConnPolicy cp_4;
connect("walking.right_leg_voltage", "coman.right_leg_JointPositionCtrl_VoltageOffset", cp_4)

var ConnPolicy cp_5;
connect("walking.torso_voltage", "coman.torso_JointPositionCtrl_VoltageOffset", cp_5)

var ConnPolicy cp_6;
connect("coman.left_arm_JointFeedback", "walking.left_arm_joint_data", cp_6)

var ConnPolicy cp_7;
connect("coman.right_arm_JointFeedback", "walking.right_arm_joint_data", cp_7)

var ConnPolicy cp_8;
connect("coman.left_leg_JointFeedback", "walking.left_leg_joint_data", cp_8)

var ConnPolicy cp_9;
connect("coman.right_leg_JointFeedback", "walking.right_leg_joint_data", cp_9)

var ConnPolicy cp_10;
connect("coman.torso_JointFeedback", "walking.torso_joint_data", cp_10)

var ConnPolicy cp_11;
connect("coman.l_arm_ft_SensorFeedback", "walking.left_arm_wrench", cp_11)
connect("coman.r_arm_ft_SensorFeedback", "walking.right_arm_wrench", cp_11)
connect("coman.l_leg_ft_SensorFeedback", "walking.left_foot_wrench", cp_11)
connect("coman.r_leg_ft_SensorFeedback", "walking.right_foot_wrench", cp_11)

var ConnPolicy cp_12;
connect("coman.imu_port", "walking.imu_port", cp_12)

# var ints direction = ints(-1, -1, 1, -1, 1 ,1)
# coman.setForceTorqueMeasurementDirection("r_arm_ft", direction)

coman.start()
walking.start()
