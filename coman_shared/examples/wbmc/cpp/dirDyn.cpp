#include "wbmc_func.h" 
 
 Eigen::Vector3f DirDyn(Eigen::Matrix<float,29,1>& s, Eigen::Matrix<float,29,1>& c) { 
 
 float s4 = s(3); 
 float s5 = s(4); 
 float s6 = s(5); 
 float s7 = s(6); 
 float s8 = s(7); 
 float s9 = s(8); 
 float s10 = s(9); 
 float s11 = s(10); 
 float s12 = s(11); 
 float s13 = s(12); 
 float s14 = s(13); 
 float s15 = s(14); 
 float s16 = s(15); 
 float s17 = s(16); 
 float s18 = s(17); 
 float s19 = s(18); 
 float s20 = s(19); 
 float s21 = s(20); 
 float s22 = s(21); 
 float s23 = s(22); 
 float s24 = s(23); 
 float s25 = s(24); 
 float s26 = s(25); 
 float s27 = s(26); 
 float s28 = s(27); 
 float s29 = s(28); 
 float c4 = c(3); 
 float c5 = c(4); 
 float c6 = c(5); 
 float c7 = c(6); 
 float c8 = c(7); 
 float c9 = c(8); 
 float c10 = c(9); 
 float c11 = c(10); 
 float c12 = c(11); 
 float c13 = c(12); 
 float c14 = c(13); 
 float c15 = c(14); 
 float c16 = c(15); 
 float c17 = c(16); 
 float c18 = c(17); 
 float c19 = c(18); 
 float c20 = c(19); 
 float c21 = c(20); 
 float c22 = c(21); 
 float c23 = c(22); 
 float c24 = c(23); 
 float c25 = c(24); 
 float c26 = c(25); 
 float c27 = c(26); 
 float c28 = c(27); 
 float c29 = c(28); 

 Eigen::Vector3f outR; 
 Eigen::Vector3f outL; 
 Eigen::Vector3f out; 
 
 outR(0) = 0.201*s10*(s9*(s8*(c7*s5 + c5*c6*s7) - 1.0*c5*c8*s6) - 1.0*c9*(s5*s7 - 1.0*c5*c6*c7)) - 0.0726*c5*s6 + 0.0793*s12*(1.0*c10*(s9*(s8*(c7*s5 + c5*c6*s7) - 1.0*c5*c8*s6) - 1.0*c9*(s5*s7 - 1.0*c5*c6*c7)) - s10*(c8*(c7*s5 + c5*c6*s7) + c5*s6*s8)) + 0.0793*c12*(c11*(s10*(s9*(s8*(c7*s5 + c5*c6*s7) - 1.0*c5*c8*s6) - 1.0*c9*(s5*s7 - 1.0*c5*c6*c7)) + c10*(c8*(c7*s5 + c5*c6*s7) + c5*s6*s8)) - 1.0*s11*(c9*(s8*(c7*s5 + c5*c6*s7) - 1.0*c5*c8*s6) + s9*(s5*s7 - 1.0*c5*c6*c7))) + 0.201*c10*(c8*(c7*s5 + c5*c6*s7) + c5*s6*s8) + 0.2258*c8*(c7*s5 + c5*c6*s7) + 0.2258*c5*s6*s8; 
 outR(1) = 0.0726*c4*c6 + 0.0793*s12*(c10*(s9*(s8*(s7*(c4*s6 + c6*s4*s5) - 1.0*c5*c7*s4) + c8*(c4*c6 - 1.0*s4*s5*s6)) + c9*(c7*(c4*s6 + c6*s4*s5) + c5*s4*s7)) - s10*(1.0*c8*(s7*(c4*s6 + c6*s4*s5) - 1.0*c5*c7*s4) - s8*(c4*c6 - 1.0*s4*s5*s6))) + 0.2258*c8*(s7*(c4*s6 + c6*s4*s5) - 1.0*c5*c7*s4) + 0.201*s10*(s9*(s8*(s7*(c4*s6 + c6*s4*s5) - 1.0*c5*c7*s4) + c8*(c4*c6 - 1.0*s4*s5*s6)) + c9*(c7*(c4*s6 + c6*s4*s5) + c5*s4*s7)) + 0.0793*c12*(c11*(s10*(s9*(s8*(s7*(c4*s6 + c6*s4*s5) - 1.0*c5*c7*s4) + c8*(c4*c6 - 1.0*s4*s5*s6)) + c9*(c7*(c4*s6 + c6*s4*s5) + c5*s4*s7)) + 1.0*c10*(1.0*c8*(s7*(c4*s6 + c6*s4*s5) - 1.0*c5*c7*s4) - s8*(c4*c6 - 1.0*s4*s5*s6))) - s11*(1.0*c9*(s8*(s7*(c4*s6 + c6*s4*s5) - 1.0*c5*c7*s4) + c8*(c4*c6 - 1.0*s4*s5*s6)) - s9*(c7*(c4*s6 + c6*s4*s5) + c5*s4*s7))) + 0.201*c10*(1.0*c8*(s7*(c4*s6 + c6*s4*s5) - 1.0*c5*c7*s4) - s8*(c4*c6 - 1.0*s4*s5*s6)) - 0.2258*s8*(c4*c6 - 1.0*s4*s5*s6) - 0.0726*s4*s5*s6 - 0.0726; 
 outR(2) = 0.201*s10*(c9*(c7*(s4*s6 - 1.0*c4*c6*s5) - 1.0*c4*c5*s7) + s9*(c8*(c6*s4 + c4*s5*s6) + s8*(s7*(s4*s6 - 1.0*c4*c6*s5) + c4*c5*c7))) - 0.2258*s8*(c6*s4 + c4*s5*s6) + 0.0726*c6*s4 - 0.201*c10*(s8*(c6*s4 + c4*s5*s6) - 1.0*c8*(s7*(s4*s6 - 1.0*c4*c6*s5) + c4*c5*c7)) + 0.2258*c8*(s7*(s4*s6 - 1.0*c4*c6*s5) + c4*c5*c7) + 0.0793*c12*(c11*(s10*(c9*(c7*(s4*s6 - 1.0*c4*c6*s5) - 1.0*c4*c5*s7) + s9*(c8*(c6*s4 + c4*s5*s6) + s8*(s7*(s4*s6 - 1.0*c4*c6*s5) + c4*c5*c7))) - 1.0*c10*(s8*(c6*s4 + c4*s5*s6) - 1.0*c8*(s7*(s4*s6 - 1.0*c4*c6*s5) + c4*c5*c7))) + s11*(s9*(c7*(s4*s6 - 1.0*c4*c6*s5) - 1.0*c4*c5*s7) - 1.0*c9*(c8*(c6*s4 + c4*s5*s6) + s8*(s7*(s4*s6 - 1.0*c4*c6*s5) + c4*c5*c7)))) + 0.0793*s12*(c10*(c9*(c7*(s4*s6 - 1.0*c4*c6*s5) - 1.0*c4*c5*s7) + s9*(c8*(c6*s4 + c4*s5*s6) + s8*(s7*(s4*s6 - 1.0*c4*c6*s5) + c4*c5*c7))) + s10*(s8*(c6*s4 + c4*s5*s6) - 1.0*c8*(s7*(s4*s6 - 1.0*c4*c6*s5) + c4*c5*c7))) + 0.0726*c4*s5*s6; 
 
 outL(0) = 0.201*s16*(s15*(s14*(c13*s5 + c5*c6*s13) - 1.0*c14*c5*s6) - 1.0*c15*(s13*s5 - 1.0*c13*c5*c6)) + 0.0726*c5*s6 + 0.0793*s18*(1.0*c16*(s15*(s14*(c13*s5 + c5*c6*s13) - 1.0*c14*c5*s6) - 1.0*c15*(s13*s5 - 1.0*c13*c5*c6)) - s16*(c14*(c13*s5 + c5*c6*s13) + c5*s14*s6)) + 0.0793*c18*(c17*(s16*(s15*(s14*(c13*s5 + c5*c6*s13) - 1.0*c14*c5*s6) - 1.0*c15*(s13*s5 - 1.0*c13*c5*c6)) + c16*(c14*(c13*s5 + c5*c6*s13) + c5*s14*s6)) - 1.0*s17*(c15*(s14*(c13*s5 + c5*c6*s13) - 1.0*c14*c5*s6) + s15*(s13*s5 - 1.0*c13*c5*c6))) + 0.201*c16*(c14*(c13*s5 + c5*c6*s13) + c5*s14*s6) + 0.2258*c14*(c13*s5 + c5*c6*s13) + 0.2258*c5*s14*s6; 
 outL(1) = 0.0793*s18*(c16*(s15*(s14*(s13*(c4*s6 + c6*s4*s5) - 1.0*c13*c5*s4) + c14*(c4*c6 - 1.0*s4*s5*s6)) + c15*(c13*(c4*s6 + c6*s4*s5) + c5*s13*s4)) - s16*(1.0*c14*(s13*(c4*s6 + c6*s4*s5) - 1.0*c13*c5*s4) - s14*(c4*c6 - 1.0*s4*s5*s6))) - 0.0726*c4*c6 + 0.2258*c14*(s13*(c4*s6 + c6*s4*s5) - 1.0*c13*c5*s4) + 0.201*s16*(s15*(s14*(s13*(c4*s6 + c6*s4*s5) - 1.0*c13*c5*s4) + c14*(c4*c6 - 1.0*s4*s5*s6)) + c15*(c13*(c4*s6 + c6*s4*s5) + c5*s13*s4)) + 0.0793*c18*(c17*(s16*(s15*(s14*(s13*(c4*s6 + c6*s4*s5) - 1.0*c13*c5*s4) + c14*(c4*c6 - 1.0*s4*s5*s6)) + c15*(c13*(c4*s6 + c6*s4*s5) + c5*s13*s4)) + 1.0*c16*(1.0*c14*(s13*(c4*s6 + c6*s4*s5) - 1.0*c13*c5*s4) - s14*(c4*c6 - 1.0*s4*s5*s6))) - s17*(1.0*c15*(s14*(s13*(c4*s6 + c6*s4*s5) - 1.0*c13*c5*s4) + c14*(c4*c6 - 1.0*s4*s5*s6)) - s15*(c13*(c4*s6 + c6*s4*s5) + c5*s13*s4))) + 0.201*c16*(1.0*c14*(s13*(c4*s6 + c6*s4*s5) - 1.0*c13*c5*s4) - s14*(c4*c6 - 1.0*s4*s5*s6)) - 0.2258*s14*(c4*c6 - 1.0*s4*s5*s6) + 0.0726*s4*s5*s6 + 0.0726; 
 outL(2) = 0.201*s16*(c15*(c13*(s4*s6 - 1.0*c4*c6*s5) - 1.0*c4*c5*s13) + s15*(c14*(c6*s4 + c4*s5*s6) + s14*(s13*(s4*s6 - 1.0*c4*c6*s5) + c13*c4*c5))) - 0.2258*s14*(c6*s4 + c4*s5*s6) - 0.0726*c6*s4 - 0.201*c16*(s14*(c6*s4 + c4*s5*s6) - 1.0*c14*(s13*(s4*s6 - 1.0*c4*c6*s5) + c13*c4*c5)) + 0.2258*c14*(s13*(s4*s6 - 1.0*c4*c6*s5) + c13*c4*c5) + 0.0793*c18*(c17*(s16*(c15*(c13*(s4*s6 - 1.0*c4*c6*s5) - 1.0*c4*c5*s13) + s15*(c14*(c6*s4 + c4*s5*s6) + s14*(s13*(s4*s6 - 1.0*c4*c6*s5) + c13*c4*c5))) - 1.0*c16*(s14*(c6*s4 + c4*s5*s6) - 1.0*c14*(s13*(s4*s6 - 1.0*c4*c6*s5) + c13*c4*c5))) + s17*(s15*(c13*(s4*s6 - 1.0*c4*c6*s5) - 1.0*c4*c5*s13) - 1.0*c15*(c14*(c6*s4 + c4*s5*s6) + s14*(s13*(s4*s6 - 1.0*c4*c6*s5) + c13*c4*c5)))) + 0.0793*s18*(c16*(c15*(c13*(s4*s6 - 1.0*c4*c6*s5) - 1.0*c4*c5*s13) + s15*(c14*(c6*s4 + c4*s5*s6) + s14*(s13*(s4*s6 - 1.0*c4*c6*s5) + c13*c4*c5))) + s16*(s14*(c6*s4 + c4*s5*s6) - 1.0*c14*(s13*(s4*s6 - 1.0*c4*c6*s5) + c13*c4*c5))) - 0.0726*c4*s5*s6;

 out = (outR + outL)/2; 
 
 return out; 
 }